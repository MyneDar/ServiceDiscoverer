// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EndpointDataColumns holds the columns for the "endpoint_data" table.
	EndpointDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "data_name", Type: field.TypeString},
		{Name: "discription", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "provider_endpoint_required_data", Type: field.TypeInt, Nullable: true},
		{Name: "provider_endpoint_provided_data", Type: field.TypeInt, Nullable: true},
	}
	// EndpointDataTable holds the schema information for the "endpoint_data" table.
	EndpointDataTable = &schema.Table{
		Name:       "endpoint_data",
		Columns:    EndpointDataColumns,
		PrimaryKey: []*schema.Column{EndpointDataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "endpoint_data_provider_endpoints_requiredData",
				Columns:    []*schema.Column{EndpointDataColumns[5]},
				RefColumns: []*schema.Column{ProviderEndpointsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "endpoint_data_provider_endpoints_providedData",
				Columns:    []*schema.Column{EndpointDataColumns[6]},
				RefColumns: []*schema.Column{ProviderEndpointsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProviderEndpointsColumns holds the columns for the "provider_endpoints" table.
	ProviderEndpointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "provider_register_data_endpoints", Type: field.TypeInt, Nullable: true},
	}
	// ProviderEndpointsTable holds the schema information for the "provider_endpoints" table.
	ProviderEndpointsTable = &schema.Table{
		Name:       "provider_endpoints",
		Columns:    ProviderEndpointsColumns,
		PrimaryKey: []*schema.Column{ProviderEndpointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "provider_endpoints_provider_register_data_endpoints",
				Columns:    []*schema.Column{ProviderEndpointsColumns[4]},
				RefColumns: []*schema.Column{ProviderRegisterDataColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProviderRegisterDataColumns holds the columns for the "provider_register_data" table.
	ProviderRegisterDataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "port", Type: field.TypeString},
		{Name: "address", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "live_interval", Type: field.TypeInt},
		{Name: "live_timeout", Type: field.TypeInt},
	}
	// ProviderRegisterDataTable holds the schema information for the "provider_register_data" table.
	ProviderRegisterDataTable = &schema.Table{
		Name:       "provider_register_data",
		Columns:    ProviderRegisterDataColumns,
		PrimaryKey: []*schema.Column{ProviderRegisterDataColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EndpointDataTable,
		ProviderEndpointsTable,
		ProviderRegisterDataTable,
	}
)

func init() {
	EndpointDataTable.ForeignKeys[0].RefTable = ProviderEndpointsTable
	EndpointDataTable.ForeignKeys[1].RefTable = ProviderEndpointsTable
	ProviderEndpointsTable.ForeignKeys[0].RefTable = ProviderRegisterDataTable
}
